= tabs_for(:class => 'secondary-navigation') do |tab|
  - tab.create('table_container', 'Expenses') do
    .content
      %h2 Listing Expenses
      = render :partial => 'layouts/flashes'
      %table.table
        %tr
          %th Transaction date
          %th
            Creditor/Category
          %th.debit Debit
          %th.credit Credit
          %th.balance Balance
          %th
        = render @expenses, :bank_account => @bank_account, :pass_through => @pass_through

      .action-bars
        -# A button will be placed in the near future?
        &nbsp;
        = will_paginate @expenses
  - tab.create('chart_container', 'Chart') do
    .content
      %h2 Chart
      #expenses_chart

- content_for :sidebar do
  .block
    %h3 Accounts
    .content
      %ul
        - @bank_accounts.each do |bank_account|
          %li{:title => bank_account.description}
            - if bank_account == @bank_account
              = "#{bank_account}"
            - else
              = link_to("#{bank_account}", bank_account_expenses_path(bank_account, :upload_id => @upload))

- content_for(:javascripts) do
  :javascript
    $(function () {
      $("#tabs").tabs();
      $("#tabs").removeClass('secondary-navigation');

      new Highcharts.Chart({
        chart: {
          renderTo: 'expenses_chart',
          zoomType: 'x',
          spacingRight: 20
        },
        series: [{
          type: 'area',
          name: 'Balance',
          pointInterval: #{1.day * 1000},
          pointStart: #{@bank_account.expenses.minimum(:transaction_date).to_time.to_i * 1000},
          data: #{expenses_chart_series(@bank_account.expenses)}
        }],
        credits: {
          enabled: false
        },
        title: {
          text: "Balance of '#{@bank_account}' by Day"
        },
        subtitle: {
          text: 'Click and drag in the plot area to zoom in'
        },
        xAxis: {
          type: 'datetime',
          title: {
            text: null
          }
        },
        yAxis: {
          title: {
            text: 'EUR'
          }
        },
        tooltip: {
          shared: true
        },
        legend: {
          enabled: false
        },
        plotOptions: {
          area: {
            _fillColor: {
              linearGradient: [0, 0, 0, 300],
              stops: [[0, 'rgb(255,255,255)'],[1, '#ACE97C']]
            },
            lineWidth: 1,
            marker: {
              enabled: false,
              states: {
                hover: {
                  enabled: true,
                  radius: 5
                }
              }
            },
            shadow: false,
            states: {
              hover: {
                lineWidth: 1
              }
            }
          }
        }
      });
    });